<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <link rel="stylesheet" type="text/css" href="/stylesheets/template1.css">
    <link rel="stylesheet" type="text/css" href="/stylesheets/texteditor.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <meta charset="utf-8">
    <title>Dashboard</title>
    <style>
      .selected-list {
        font-weight: bold;
      }
      .task-name input:checked + label {
        text-decoration: line-through;
      }
    </style>

    <style>
      .CHATBOX { background: white; padding: 3px; position: fixed; bottom: 0; overflow-y: scroll; height: 25%; width: 100%; z-index: -1;}
      .CHATBOX input { border: 0; padding: 10px; width: 90%; margin-right: 0.5%;}
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
      .inputBox{position: fixed; bottom: 5%; right: 5%; width: 10%}
      .selectUser{ position: fixed; bottom: 10%; right: 5%; width: 5% }
      .sendButton { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; position: fixed; right: 2%; bottom: 10%;}
    </style>

  </head>

  <script>
    var userSessions = [];
    var your_name = "<%= username %>";
    var sessionID;
    var logged = false;
    const socket = io();
    
    $(function () {
      $('#socketChat').submit(function(e){

        e.preventDefault(); // prevents page reloading
        var specialPerson =document.getElementById("chatUsers");
        var selected = specialPerson.options[specialPerson.selectedIndex];
        if (selected.text == "") {
          socket.emit('type chat message', your_name, $('#m').val());
        }
        else{
          socket.emit('specified user', selected.id, your_name, $('#m').val());
        }
        $('#m').val('');
        return false;
        });

    socket.on('get chat message', function(name,msg){
      console.log('all chat:');
      $('#messages').append($('<li>').text(name + ": " + msg));
    });

    socket.on('whisper', function(id,name,msg){
      console.log(msg);
      $('#messages').append($('<li>').text(name +"(whisper): " + msg));
    })

    socket.on('new user', function(id,list){
      for (var i = 0; i < list.length; i++) {
        if(list[i].id == id ){
          $('#currUsers').append($('<li>').text(list[i].name).attr("id", id));
          var chatUsers = document.getElementById("chatUsers");
          var option = document.createElement("option");
          option.text = list[i].name;
          option.id = list[i].id;
          chatUsers.add(option);
          if (logged == false) {
            logged = true;
            sessionID = id;
          }
          break;
        }
      }
      for (var i = 0; i < list.length; i++) {
        if(list[i].id != id &&list[i].id != sessionID){
          $('#currUsers').append($('<li>').text(list[i].name).attr("id", list[i].id));
          var chatUsers = document.getElementById("chatUsers");
          var option = document.createElement("option");
          option.text = list[i].name;
          option.id = list[i].id;
          chatUsers.add(option);
          break;
        }
      }
      
    })

    socket.on('user disconnected', function(id,list) {
      var ul = document.getElementById("currUsers");
      for (var i = 0; i < ul.children.length; i++){
        if(ul.children[i].id == id){
          console.log("i and node " + i+ ul.children[i]);
          ul.removeChild(ul.children[i]);
          break;
        }
      }

      var chatUsers = document.getElementById("chatUsers");
      for (var i = 1; i < chatUsers.length; i++) {
        if(chatUsers.options[i].id == id){
          chatUsers.options[i].remove();
          break;
        }
      }
    });


    ///////BOTTOM////////
  });
  </script>

  <script>
  $(document).ready(function(){
    $("#clickme").click(function(){
      $("#test").hide();
    });
  });
  </script>

  <script type="text/javascript">

    // Change the templates
    function ChangeTemplate(num){
      var oldlink = document.getElementsByTagName("link").item(0);
      var newlink = document.createElement("link");
      newlink.setAttribute("rel", "stylesheet");
        newlink.setAttribute("type", "text/css");
      switch(num){
        case 1:
          newlink.setAttribute("href", "/stylesheets/template1.css");
          break;
        case 2:
          newlink.setAttribute("href", "/stylesheets/template2.css");
          break;
        case 3:
          newlink.setAttribute("href", "/stylesheets/template3.css");
          break;
      }
      document.getElementsByTagName("head").item(0).replaceChild(newlink, oldlink);
    }
  </script>

  <!--------------------------------------          ------------------------------------>
  <!--------------------------------------   BODY   ------------------------------------>
  <!--------------------------------------          ------------------------------------>

  <body onload="checkReset()">
    <div class="bg">
        <button id="clickme">Click me</button>
        <!-- <div class="greet">
          <h1> Greetings! &nbsp; <span class="username"><%= username %></span> </h1>
        </div> -->
        <div class="template">Template</div>

        <div id="test">Testing </div>

        <div><p id="USERS"></p></div>

        <div class="chatting">
          <ul id="messages" class="CHATBOX"></ul>
          <select id="chatUsers" class="selectUser"><option></option></select>
          <form id="socketChat" action="">
            <input id="m" autocomplete="off" class="inputBox" /><button class="sendButton">Send</button>
          </form>
        </div>

        <ul id="currUsers">Current Users</ul>
        

        <div class="template-field">
          <button id="template1" class="template-button" onclick="ChangeTemplate(1)"></button>
          <button id="template2" class="template-button" onclick="ChangeTemplate(2)"></button>
          <button id="template3" class="template-button" onclick="ChangeTemplate(3)"></button><br>
          <button id="template4" class="template-button" onclick="ChangeTemplate(4)"></button>
          <button id="template5" class="template-button" onclick="ChangeTemplate(5)"></button>
          <button id="template6" class="template-button" onclick="ChangeTemplate(6)"></button>
        </div>

      <form class="logout-form" action="/logout?_method=DELETE" method="post" logout-form>
        <button type="submit">Log Out</button>
      </form>

      <form class="del-user-form" action="/del_user" method="post" del-user-form>
        <button type="submit" hidden="true">Delete Account</button>
      </form>


      <div class="all-lists">
        <h2 class="task-list-title">My lists</h2>

          <ul class="lists" data-lists></ul>

          <form class="new-list-form" action="/add_list" method="post" new-list-form>
            <input type="text" name="list" class="new list" placeholder="new list name">
            <button type="" class="btn create">+</button>
          </form>
        </div>

      <div class="display-list" list-display-container>
        <div class="header">
          <h2 class="list-title" list-title></h2>
          <p class="task-count" list-count></p>
        </div>

        <div class="body">
          <div class="tasks" data-tasks></div>

          <form class="new-task-form" action="/add_task" method="post" new-task-form>
            <input type="text" name="id" hidden>
            <input type="text" name="task" class="new task" placeholder="new task name">

            <div class="">
              <input type="text" name="day" value="" hidden>
              <input type="checkbox" name="sunday" value="0" id="sunday"><label for="sunday">sunday</label><br>
              <input type="checkbox" name="monday" value="1" id="monday"><label for="monday">monday</label><br>
              <input type="checkbox" name="tuesday" value="2" id="tuesday"><label for="tuesday">tuesday</label><br>
              <input type="checkbox" name="wednesday" value="3" id="wednesday"><label for="wednesday">wednesday</label><br>
              <input type="checkbox" name="thursday" value="4" id="thursday"><label for="thursday">thursday</label><br>
              <input type="checkbox" name="friday" value="5" id="friday"><label for="friday">friday</label><br>
              <input type="checkbox" name="saturday" value="6" id="saturday"><label for="saturday">saturday</label><br>
              <input type="time" name="time" value="">
            </div>


            <button class="btn create">+</button>
          </form>

          <form class="del-list-form" action="/del_list" method="post" del-list-form>
            <input type="text" name="id" hidden>
            <button class="btn delete">Delete list</button>
          </form>
        </div>
      </div>

      <form class="" action="" method="post" update-list-from hidden>
        <input type="text" name="list_id">
        <input type="text" name="task_id">
        <input type="text" name="complete">
      </form>

      <template id="list-template">
        <li class="list-name"></li>
      </template>

      <template id="task-template">
        <div class="task-name">
          <input type="checkbox">
          <label></label>
          <p></p>
          <button type="button" name="button">X</button>
        </div>
      </template>

      <div class="texteditor" >
        <form name="compForm" method="post" action="sample.php" onsubmit="if(validateMode()){this.myDoc.value=oDoc.innerHTML;return true;}return false;">
        <input type="hidden" name="myDoc">
        <textarea id="textBox" contenteditable="true" ></textarea>  
        <p>
          <button type="button" id="savebutton">Save as file</button>
          <button type="button" id="clearbutton">Clear</button>
        </p>

        </form>
      </div> 


      <!--              Bottom            -->
    </div>
  </body>

  <script type="text/javascript">
    let USERS = <%- USERS %>;
    function displayUsers()
    {
        document.getElementById("textBox").innerHTML = "Text";   
        // for (var i = 0; i < USERS.users.length; i++) {
        //   console.log(USERS.users[i].name);}
    }
    var user_arr = [];
    var user_list = "";
    for (var i = 0; i < USERS.users.length; i++) {
      user_list += USERS.users[i].name;
      user_arr.push(USERS.users[i].name, " ");
    }
    document.getElementById("USERS").innerHTML = user_list;
  </script>
  <script>

    const logoutForm = document.querySelector('[logout-form]')

    const listContainer = document.querySelector('[data-lists]')
    const newListForm = document.querySelector('[new-list-form]')
    const delListForm = document.querySelector('[del-list-form]')
    const listTemplate = document.getElementById('list-template')

    const listDisplayContainer = document.querySelector('[list-display-container]')
    const listTitleElement = document.querySelector('[list-title]')
    const listCountElement = document.querySelector('[list-count]')
    const taskContainer = document.querySelector('[data-tasks]')
    const newTaskForm = document.querySelector('[new-task-form]')
    const updateListForm = document.querySelector('[update-list-from]')
    const taskTemplate = document.getElementById('task-template')

    const LOCAL_STORAGE_SELECTED_LIST_ID_KEY = 'task.selectedListId'

    let list = <%- list %>
    let selectedListId = localStorage.getItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY)

    listContainer.addEventListener('click', evt => {
      if (evt.target.tagName == 'LI') {
        selectedListId = evt.target.id
        saveSelectedListId()
        clearElement(taskContainer)
        render()
      }
    })

    taskContainer.addEventListener('click', evt => {
      if (evt.target.tagName == 'INPUT') {
        let selectedList = list.find(list => list.id == selectedListId)
        selectedTask = selectedList.tasks.find(task => task.id == evt.target.id)
        updateListForm.complete.value = evt.target.checked
        updateListForm.task_id.value = selectedTask.id
        updateListForm.list_id.value = selectedListId
        updateListForm.action = '/save_complete'
        updateListForm.submit()
      } else if (evt.target.tagName == 'BUTTON') {
        let selectedList = list.find(list => list.id == selectedListId)
        selectedTask = selectedList.tasks.find(task => task.id == evt.target.parentElement.firstElementChild.id)
        updateListForm.task_id.value = selectedTask.id
        updateListForm.list_id.value = selectedListId
        updateListForm.action = '/del_task'
        updateListForm.submit()
      }
    })

    logoutForm.addEventListener('submit', evt => {
      evt.preventDefault()
      selectedListId = null
      saveSelectedListId()
      logoutForm.submit()
    })

    newListForm.addEventListener('submit', evt => {
      evt.preventDefault()
      const newList = newListForm.list.value
      if (newList == '') return
      newListForm.submit()
    })

    delListForm.addEventListener('submit', evt => {
      evt.preventDefault()
      const delList = selectedListId
      if (delList == null || delList == 'null') return
      delListForm.id.value = delList
      selectedListId = null
      saveSelectedListId()
      delListForm.submit()
    })

    newTaskForm.addEventListener('submit', evt => {
      evt.preventDefault()
      const newTask = newTaskForm.task.value
      if (newTask == '') return
      newTaskForm.id.value = selectedListId
      var day = []
      var selected = [newTaskForm.sunday.checked,newTaskForm.monday.checked,newTaskForm.tuesday.checked,newTaskForm.wednesday.checked,newTaskForm.thursday.checked,newTaskForm.friday.checked,newTaskForm.saturday.checked]
      for (var i = 0; i < selected.length; i++) {
        if (selected[i]) {
          day.push(i)
        }
      }
      newTaskForm.day.value = day
      newTaskForm.time.value = newTaskForm.time.value + ':' + '00'
      newTaskForm.submit()
    })

    function saveSelectedListId() {
      localStorage.setItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY, selectedListId)
    }

    function render() {
      clearElement(listContainer)
      renderLists()
      if (selectedListId == null || selectedListId == 'null') {
        listDisplayContainer.style.display = 'none'
      } else {
        let selectedList = list.find(list => list.id == selectedListId)
        selectedTasks = selectedList.tasks
        renderTasks(selectedTasks)
        renderTaskCount(selectedTasks)
        listTitleElement.innerText = list.find(list => list.id == selectedListId).name
        listDisplayContainer.style.display = ''
      }
    }

    function checkReset() {
      var today = new Date()
      var day = today.getDay()
      var hour = today.getHours()
      hour = ("0" + hour).slice(-2);
      var minute = today.getMinutes()
      minute = ("0" + minute).slice(-2);
      var second = today.getSeconds()
      second = ("0" + second).slice(-2);

      setTimeout('checkReset()',1000)

      list.forEach(list => {
        list.tasks.forEach(task => {
          if (task.date != '' && task.time != '') {
            var dayArr = task.date.split(',')
            var timeArr = task.time.split(':')
            var countDownDates = []
            dayArr.forEach(date => {
              var nextReset = new Date()
              nextReset.setHours(timeArr[0], timeArr[1], 00, 00)
              nextReset.setDate(today.getDate() + (parseInt(date) + 7 - today.getDay()) % 7)
              if (nextReset.getTime() < today.getTime()) {
                nextReset.setDate(today.getDate() + (parseInt(date) + 7 - today.getDay()))
              }
              countDownDates.push(nextReset)
            })
            var distance = Math.min.apply(Math, countDownDates) - today
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
            document.getElementById(`${task.id}_paragraph`).innerHTML = "resets in " + days + "d " + hours + "h " + minutes + "m " + seconds + "s "
          }

          if (task.complete) {
            if (task.date.includes(day)) {
              if (task.time.includes(hour + ':' + minute + ':' + second)) {
                updateListForm.complete.value = false
                updateListForm.task_id.value = task.id
                updateListForm.list_id.value = list.id
                updateListForm.action = '/save_complete'
                updateListForm.submit()
              }
            }
          }
        })
      })
    }

    function renderTasks(selectedTasks) {
      selectedTasks.forEach(task => {
        const taskElement = document.importNode(taskTemplate.content, true)
        const checkbox = taskElement.querySelector('input')
        checkbox.id = task.id
        checkbox.checked = task.complete
        const label = taskElement.querySelector('label')
        label.htmlFor = task.id
        label.innerText = task.name
        const paragraph = taskElement.querySelector('p')
        paragraph.id = task.id + '_paragraph'
        taskContainer.appendChild(taskElement)
      })
    }

    function renderTaskCount(selectedTasks) {
      const incompleteTaskCount = selectedTasks.filter(task => !task.complete).length
      if (incompleteTaskCount == 1) {
        var incompleteTaskString = `${incompleteTaskCount} task remaining`
      } else {
        var incompleteTaskString = `${incompleteTaskCount} tasks remaining`
      }
      listCountElement.innerText = incompleteTaskString
    }

    function renderLists() {
      list.forEach(list => {
        const listElement = document.importNode(listTemplate.content, true)
        const li = listElement.querySelector('li')
        li.id = list.id
        li.innerText = list.name
        if (list.id == selectedListId) {
          li.classList.add('selected-list')
        }
        listContainer.appendChild(listElement)
      })
    }

    function clearElement(element) {
      while (element.firstChild) {
        element.removeChild(element.firstChild)
      }
    }

    render()
  </script>
  
  
  <script type="text/javascript" src="/stylesheets/script.js"></script>
</html>
